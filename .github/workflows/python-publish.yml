# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Python Package

on:
  push:
    branches:
      - main  # Adjust this to your default branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5  # Keep only this one (latest version)

    - name: Set up Python
      uses: actions/setup-python@v6  # Also update this to v4
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "latest"

    - name: Sync dependencies
      run: uv sync --dev

    - name: Build package
      run: uv build


    # - name: Publish package to PyPI
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    #   run: |
    #     uv run pip install twine
    #     uv run twine upload dist/*
        
    - name: Clean up
      run: rm -rf dist build *.egg-info


    # - name: Publish package to PyPI
    #   env:
    #     POETRY_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
    #   run: poetry publish --username __token__ --password $POETRY_PYPI_TOKEN


